# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, OpenDroneMap
# This file is distributed under the same license as the OpenDroneMap package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: OpenDroneMap 2.3.3\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-01-14 14:19-0500\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../../installation.rst:4
#: ca7f5bc2eabd49cc96009728062ea54d
msgid "Installation and Getting Started"
msgstr ""

#: ../../../installation.rst:6
#: 1ed7d87f513c4ec5b9a5279266a45b6d
msgid "This section is excerpted and modified with permission from `OpenDroneMap: The Missing Guide <https://odmbook.com>`_, by Piero Toffanin."
msgstr ""

#: ../../../installation.rst:8
#: e31183e0021840e8af87079d21401d5a
msgid "Until recently OpenDroneMap was the term used to refer to a single command line application (what is now known as the ODM project).  With the recent development of a web interface, an API and other tools, OpenDroneMap has become an ecosystem of various applications to process, analyze and display aerial data. This ecosystem is made of several components:"
msgstr ""

#: ../../../installation.rst:14
#: 3c4147a6684940ad928eed8ab8fb8e33
msgid "**ODM** is the processing engine, which can be used from the command line. It takes images as input and produces a variety of outputs, including point clouds, 3D models and orthophotos"
msgstr ""

#: ../../../installation.rst:20
#: 2905a2f97f9b41d496b9f5715a0c7a5f
msgid "**NodeODM** is a light-weight API built on top of ODM. It allows users and applications to access the functions of ODM over a computer network"
msgstr ""

#: ../../../installation.rst:26
#: eedbd7ab806e4960bd0bbbefea18ece3
msgid "**WebODM** is a friendly user interface that includes a map viewer, a 3D viewer, user logins, a plugin system and many other features that are expected of modern drone mapping platforms"
msgstr ""

#: ../../../installation.rst:32
#: 0037799dfae54302a1ee5dcf53fb8717
msgid "**CloudODM** is a small command line client to communicate with ODM via the NodeODM API"
msgstr ""

#: ../../../installation.rst:38
#: 5f7f36d13cbc4bab82813568eb13063c
msgid "**PyODM** is a Python SDK for creating tasks via the NodeODM API. We cover it in more detail in the “Automated Processing With Python” chapter"
msgstr ""

#: ../../../installation.rst:44
#: 79fe7f6a04b244158a344f2ec45a80ad
msgid "**ClusterODM** is a load balancer for connecting together multiple NodeODM instances"
msgstr ""

#: ../../../installation.rst:46
#: 3d4380c923f24a6c8c47776462ef6b43
msgid "ODM, NodeODM and WebODM are available on all major platforms (Windows, macOS and Linux) via a program called docker, which is required to run the software. Docker offers a way to run “containers”. Containers are packaged copies of an entire system, its software and its dependencies. These containers run within a virtual environment. On Linux this virtual environment is available from the operating system and is very efficient. On macOS and Windows the containers run within a VM, so there’s a bit of a overhead. but it’s still very suitable for running the software. Once installed users do not have to worry much about docker, as it operates (almost) transparently."
msgstr ""

#: ../../../installation.rst:48
#: 159054486d614cbdbcf568d61e39da15
msgid "Without docker it would not be possible to run ODM on Windows or macOS. On these platforms ODM cannot run natively. Future development efforts are being focused on leveraging the new Windows Subsystem for Linux (WSL) and the possibility to make a native port of all dependencies to macOS, which is going to make the installation much easier."
msgstr ""

#: ../../../installation.rst:50
#: 73af16f53c6b4b658517706a33eabf7f
msgid "On Ubuntu Linux 18.04 it’s feasible to run all OpenDroneMap software natively. However, because there’s very little performance penalty for running docker on Linux and docker is straightforward to setup on this platform, we don’t recommend it. On Linux the advantages of containerization far outweigh a tiny performance penalty. With docker users also get easy one-step updates of the software, so that’s nice."
msgstr ""

#: ../../../installation.rst:54
#: 359d8630ea1647e097be5d4b34eb3ce4
msgid "Hardware Recommendations"
msgstr ""

#: ../../../installation.rst:56
#: 18823c774c5e485591613ede3537aa91
msgid "The bare minimum requirements for running the software are:"
msgstr ""

#: ../../../installation.rst:59
#: b9269e30b47548fb80ef20abc05b37a9
msgid "64bit CPU manufactured on or after 2010"
msgstr ""

#: ../../../installation.rst:60
#: 99dfccc50a45405a87d7c7f3b0fcc36f
msgid "20 GB of disk space"
msgstr ""

#: ../../../installation.rst:61
#: bb85e75db8de49cea35978868ce535f0
msgid "4 GB RAM"
msgstr ""

#: ../../../installation.rst:63
#: 0ee5785cbbce46659999f9e1123c6632
msgid "No more than 100-200 images can be processed with the above specifications (the software will run out of memory). Recommended requirements are:"
msgstr ""

#: ../../../installation.rst:65
#: 42e9b361c9f94967851b2af0e477ca87
msgid "Latest Generation CPU"
msgstr ""

#: ../../../installation.rst:66
#: 0ed901a7dc214066a572808e38fca5c1
msgid "100 GB of disk space"
msgstr ""

#: ../../../installation.rst:67
#: 2fb4ca503be345c9aec64d6043e56e56
msgid "16 GB RAM"
msgstr ""

#: ../../../installation.rst:69
#: 60dc5f9c09c94797a3796e6d6ab429ea
msgid "The above will allow for a few hundred images to be processed without too many issues. A CPU with more cores will allow for faster processing, while a graphics card (GPU) currently has no impact on performance. For processing more images, add more disk space and RAM linearly to the number of images you need to process."
msgstr ""

#: ../../../installation.rst:75
#: 0499c473d45e4600b8b286d034152a1e
msgid "Installation"
msgstr ""

#: ../../../installation.rst:77
#: 6c957eef0a0947d9af44c5fdaae64eee
msgid "We recommend people use `docker <https://www.docker.com>`_ for running ODM, whether you are on Windows, macOS or Linux."
msgstr ""

#: ../../../installation.rst:80
#: a221646a87e54ffca00f4faa9d484d8c
msgid "Windows"
msgstr ""

#: ../../../installation.rst:82
#: 58413e3cb9ee4fa98e8a905682b84cd6
msgid "To run OpenDroneMap you need at least Windows 7. Previous versions of Windows are not supported."
msgstr ""

#: ../../../installation.rst:86
#: ../../../installation.rst:238
#: 6e0d75c55ec64542aad5f8a07448f58a
#: e6caef46a77342c0bea685754f2e26ea
msgid "Step 1. Check Virtualization Support"
msgstr ""

#: ../../../installation.rst:88
#: ee636e01fd9c4b95a10d784713c4df08
msgid "Docker requires a feature from your CPU called virtualization, which allows it to run virtual machines (VMs). Make sure you have it enabled! Sometimes this is disabled. To check, on Windows 8 or higher you can open the **Task Manager** (press CTRL+SHIFT+ESC) and switch to the **Performance** tab."
msgstr ""

#: ../../../installation.rst:94
#: 54bfe40fdc294fe9b4ed0e950ea72b13
msgid "*Virtualization should be enabled*"
msgstr ""

#: ../../../installation.rst:96
#: c3d505056c244fc498d98f269adcc407
msgid "On Windows 7 to see if you have virtualization enabled you can use the `Microsoft® Hardware-Assisted Virtualization Detection Tool <http:// www.microsoft.com/en-us/download/details.aspx?id=592>`_ instead."
msgstr ""

#: ../../../installation.rst:99
#: 1798b11c83d84130a9f81911fb0b1117
msgid "If virtualization is disabled, you’ll need to enable it. The procedure unfortunately is a bit different for each computer model, so the best way to do this is to look up on a search engine “how to enable vtx for <type your computer model here>”. Often times it’s a matter of restarting the computer, immediately pressing F2 or F12 during startup, navigating the boot menu and changing the settings to enable virtualization (often called “VT-X”)."
msgstr ""

#: ../../../installation.rst:105
#: d5409249d7cb4371aa9eb0e5bb869b8d
msgid "*Common keys to press at computer startup to access the boot menu for various PC vendors*"
msgstr ""

#: ../../../installation.rst:108
#: ../../../installation.rst:257
#: a501c1bab3bf45e48bae750c27e1dd4d
#: b8293121ff6e49cd9863ec30d5fd14f4
msgid "Step 2. Install Requirements"
msgstr ""

#: ../../../installation.rst:110
#: c982360ef2dd44fca54712ecadcbb06d
msgid "First, you’ll need to install:"
msgstr ""

#: ../../../installation.rst:112
#: fdb9892340e64cb1b9c159e559288230
msgid "Git: https://git-scm.com/downloads"
msgstr ""

#: ../../../installation.rst:113
#: b5affd70afdb494285672c4e9e5aed9e
msgid "Python (latest version 3): https://www.python.org/downloads/windows/"
msgstr ""

#: ../../../installation.rst:115
#: 6a02317e616249b7b479fd89d0305d6b
msgid "For Python 3, make sure you check **Add Python 3.x to PATH** during the installation."
msgstr ""

#: ../../../installation.rst:121
#: 62bb7db9c48c4a8ca31df2aeee1b64e9
msgid "*Don’t forget to add the Python executable to your PATH (so that you can run commands with it)*"
msgstr ""

#: ../../../installation.rst:123
#: 4c2ae6a3e7c647308a1260de04df5d6a
msgid "Then, only if you are on Windows 10 Home, Windows 8 (any version) or Windows 7 (any version), install:"
msgstr ""

#: ../../../installation.rst:125
#: 1ba2e1a8b1934fc8876c0fe60068fb0a
msgid "Docker Toolbox: https://github.com/docker/toolbox/releases/download/v18.09.3/DockerToolbox-18.09.3.exe"
msgstr ""

#: ../../../installation.rst:127
#: 8e2a6d327e614a99ad17905807f1963b
msgid "If you are on Windows 10 Professional or a newer version, you should install instead:"
msgstr ""

#: ../../../installation.rst:129
#: 45cba2a6ac5140e19d78bb8ab794eafc
msgid "Docker for Windows: https://download.docker.com/win/stable/Docker%20for%20Windows%20Installer.exe"
msgstr ""

#: ../../../installation.rst:131
#: 3ff00b319b51474fb26ab6cf937bcfe1
msgid "Please do **NOT** install both docker programs. They are different and will create a mess if they are both installed."
msgstr ""

#: ../../../installation.rst:133
#: 3ae6dab12627446c96bac3dcf45fd4bc
msgid "After installing docker, launch it from the Desktop icon that is created from the installation (**Docker Quickstart** in the case of Docker Toolbox, **Docker for Windows** for Docker for Windows). This is important, do not skip this step. If there are errors, follow the prompts on screen to fix them."
msgstr ""

#: ../../../installation.rst:136
#: ../../../installation.rst:299
#: e899fe5d4e634b3babcac69c7d85307f
#: 01b0ef2d25174ffba76ece0ea41b0473
msgid "Step 3. Check Memory and CPU Allocation"
msgstr ""

#: ../../../installation.rst:138
#: 8c9d7577ecb14b98a69ba480b20356e3
msgid "Docker on Windows works by running a VM in the background (think of a VM as a “computer emulator”). This VM has a certain amount of memory allocated and WebODM can only use as much memory as it’s allocated."
msgstr ""

#: ../../../installation.rst:140
#: a8030e1a9fd44ef6a87dc80a907dd405
msgid "If you installed Docker Toolbox (see below if you installed Docker for Windows instead):"
msgstr ""

#: ../../../installation.rst:142
#: 9811cefad7c349479cf16dbd9172d2f0
msgid "Open the **VirtualBox Manager** application"
msgstr ""

#: ../../../installation.rst:143
#: 0ac38ae9bc6c4815989efc5fefe16dc9
msgid "Right click the **default** VM and press **Close (ACPI Shutdown)** to stop the machine"
msgstr ""

#: ../../../installation.rst:144
#: 8aa1268debcd489daffdc3abbf805df9
msgid "Right click the **default** VM and press **Settings...**"
msgstr ""

#: ../../../installation.rst:145
#: 5923a15e0b664b6fa2577388188691c3
msgid "Move the **Base Memory** slider from the **System** panel and allocate 60-70% of all available memory, optionally adding 50% of the available processors from the **Processor** tab also"
msgstr ""

#: ../../../installation.rst:151
#: 4f60c64419f8484da38deacc6254255b
msgid "*VirtualBox default VM settings*"
msgstr ""

#: ../../../installation.rst:153
#: ac4a561c3245431a9e80eb44751786d0
msgid "Then press **OK**, right click the **default** VM and press **Start**."
msgstr ""

#: ../../../installation.rst:155
#: 3d9f78a7a16145c99ec002738c1a5bdc
msgid "If you installed Docker for Windows instead:"
msgstr ""

#: ../../../installation.rst:157
#: 40585ef1df7344fa8c4888a2e425a581
msgid "Look in the system tray and right click the “white whale” icon."
msgstr ""

#: ../../../installation.rst:158
#: 42f607a04c8e41bc996c62680d11f4fc
msgid "From the menu, press **Settings...**"
msgstr ""

#: ../../../installation.rst:159
#: 6f2f4e6960b74493aecfeaad483bf58a
msgid "From the panel, click **Advanced** and use the sliders to allocate 60-70% of available memory and use half of all available CPUs."
msgstr ""

#: ../../../installation.rst:160
#: b513fa1aee18473d889250226efd6dd4
msgid "Press **Apply**."
msgstr ""

#: ../../../installation.rst:166
#: 2c48a0140d4c4953862e354aea188136
msgid "*Step 1 Docker icon*"
msgstr ""

#: ../../../installation.rst:172
#: c993ad5adff34fedb4f46e33ccfb649f
msgid "*Step 3 & 4 Docker settings*"
msgstr ""

#: ../../../installation.rst:175
#: 3a089a31f50e421f82466a065623350e
msgid "Step 4. Download WebODM"
msgstr ""

#: ../../../installation.rst:177
#: 2a32abb9131448199cf601d091dd07e2
msgid "Open the **Git Gui** program that comes installed with Git. From there:"
msgstr ""

#: ../../../installation.rst:179
#: 375c2c96f1034b36b780d6e6c043ab6d
msgid "When Git Gui opens, click 'Clone Existing Repository' option"
msgstr ""

#: ../../../installation.rst:180
#: 0b2e3b5a546c45c3a5d5a48dd4a1ac1e
msgid "In **Source Location** type: https://github.com/OpenDroneMap/WebODM"
msgstr ""

#: ../../../installation.rst:181
#: fc8376d885d34eef9da5c7a852c3e921
msgid "In **Target Directory** click browse and navigate to a folder of your choosing (create one if necessary)"
msgstr ""

#: ../../../installation.rst:182
#: c6cb98301024474ea30cea6f73aa684d
msgid "Press **Clone**"
msgstr ""

#: ../../../installation.rst:188
#: 02e80960b8a7401985359b37d2fbab80
msgid "*Git Gui*"
msgstr ""

#: ../../../installation.rst:190
#: f3c4770173dd40aa89181dc24544dedf
msgid "If the download succeeded, you should now see this window:"
msgstr ""

#: ../../../installation.rst:196
#: 88351c8606484da9b20a8548138209e1
msgid "*Git Gui after successful download (clone)*"
msgstr ""

#: ../../../installation.rst:198
#: 227a6f8c77a54c07b227c951f6dcfecb
msgid "Go to the **Repository** menu, then click **Create Desktop Icon**. This will allow you to come back to this application easily in the future."
msgstr ""

#: ../../../installation.rst:201
#: e658938ab82c4d41a016add0e3d602e9
msgid "Step 4. Launch WebODM"
msgstr ""

#: ../../../installation.rst:203
#: b6356f518c1546e0a1594d9b3fe504f9
msgid "From Git Gui, go to the **Repository** menu, then click **Git Bash**. From the command line terminal type:"
msgstr ""

#: ../../../installation.rst:209
#: b767c438fd79457e9d994062bbe1f62b
msgid "Several components will download to your machine at this point, including WebODM, NodeODM and ODM. After the download you should be greeted by the following screen:"
msgstr ""

#: ../../../installation.rst:215
#: 6a3a170a88af4dc9a7cac3fc4558fb68
msgid "*Console output after starting WebODM for the first time*"
msgstr ""

#: ../../../installation.rst:217
#: 4cfaceb9d320457ca7f89347856e3c2b
msgid "If you are using Docker for Windows, open a web browser to http://localhost:8000"
msgstr ""

#: ../../../installation.rst:218
#: d0358e745d3846d09636284486fe26b2
msgid "If you are using Docker Toolbox, find the IP address to connect to by typing:"
msgstr ""

#: ../../../installation.rst:224
#: 8b51e7ea4f3e48d19584552449c5fdf0
msgid "You should get a result like the following:"
msgstr ""

#: ../../../installation.rst:230
#: 60b2163a2ca944d5b561bf41f24f11fa
msgid "Then connect to http://192.168.1.100:8000 (replacing the IP address with the proper one)."
msgstr ""

#: ../../../installation.rst:233
#: 442b43b52a3b454fbefb7e9437c9fb9a
msgid "macOS"
msgstr ""

#: ../../../installation.rst:235
#: 97b76743b16e4d02a8d4a35a448cf42d
msgid "Most modern (post 2010) Mac computers running macOS Sierra 10.12 or higher can run OpenDroneMap using docker, as long as hardware virtualization is supported (see below)."
msgstr ""

#: ../../../installation.rst:240
#: b8cfb91406bd47d79f56768fc001e166
msgid "Open a Terminal window and type:"
msgstr ""

#: ../../../installation.rst:246
#: b88a2d67ee834aa9baeb0655aa62a8df
msgid "You will get a response similar to the following:"
msgstr ""

#: ../../../installation.rst:252
#: 628d4c3aa2e44036b0deb1876d86b3f1
msgid "If the result is *kern.hv_support: 1*, then your Mac is supported! Continue with Step 2."
msgstr ""

#: ../../../installation.rst:254
#: 2aa61f249135450e939d8080508e5746
msgid "If the result is *kern.hv_support: 0*, unfortunately it means your Mac is too old to run OpenDroneMap. :("
msgstr ""

#: ../../../installation.rst:259
#: 0c78f31ed3f846f4ba1761936eb4721a
msgid "There are only two programs to install:"
msgstr ""

#: ../../../installation.rst:261
#: e90623cdd26245dd91b46c7f3b72ccf3
msgid "Docker: https://download.docker.com/mac/stable/Docker.dmg"
msgstr ""

#: ../../../installation.rst:262
#: fe8e0d7f80c24676abb9140e1090b6f4
msgid "Git: https://sourceforge.net/projects/git-osx-installer/files/"
msgstr ""

#: ../../../installation.rst:264
#: a30ce5e119a846d0937509eabb900991
msgid "After installing docker you should find an icon that looks like a whale in the task bar."
msgstr ""

#: ../../../installation.rst:270
#: 10d6273d82a04f1587c2d5fb20b2ef7f
msgid "*Docker app running*"
msgstr ""

#: ../../../installation.rst:272
#: ac8be6bc43224ebdaa909843db7ce97b
msgid "You can verify that docker is running properly by opening the **Terminal** app and typing:"
msgstr ""

#: ../../../installation.rst:278
#: 7f874c9eae5c4c67ab48ab48b4c85f56
msgid "Which should return"
msgstr ""

#: ../../../installation.rst:284
#: 202a8d7848a84897bec59fc30d76ff96
msgid "To verify that git is installed, simply type:"
msgstr ""

#: ../../../installation.rst:290
#: 727a35e6746443e38a4bb1a2530226f5
msgid "Which should return something similar to the following:"
msgstr ""

#: ../../../installation.rst:296
#: 7ee7ce0fe3cf40d28edb2a88589aafc6
msgid "If you get a “bash: git: command not found”, try to restart your **Terminal** app and double-check for any errors during the install process."
msgstr ""

#: ../../../installation.rst:301
#: c969a4655a6e41c78571f4f05006d199
msgid "Docker on macOS works by running a VM in the background (think of it as a “computer emulator”). This VM has a certain amount of memory allocated and WebODM can only use as much memory as it’s allocated."
msgstr ""

#: ../../../installation.rst:303
#: e89322d22add432b8d00ef0da9910a6c
msgid "Right click the whale icon from the task bar and click **Preferences**..."
msgstr ""

#: ../../../installation.rst:304
#: 73457306344148c0bc0c6382936ef870
msgid "Select the **Advanced** tab"
msgstr ""

#: ../../../installation.rst:305
#: 6791fc129e16413983be624d46091da7
msgid "Adjust the CPUs slider to use half of all available CPUs and the memory to use 60-70% of all available memory"
msgstr ""

#: ../../../installation.rst:306
#: 2fad355dfb504197bb70aded8fa643ec
msgid "Press **Apply & Restart**"
msgstr ""

#: ../../../installation.rst:312
#: 339e99e54264491a83c530f1ed107050
msgid "*Docker advanced settings*"
msgstr ""

#: ../../../installation.rst:315
#: a55d3812154e4abaadd608dfd4dfac08
msgid "Step 4. Download and Launch WebODM"
msgstr ""

#: ../../../installation.rst:317
#: 0d5f531d78ac474db92ecc60012e4521
msgid "From a **Terminal** type:"
msgstr ""

#: ../../../installation.rst:325
#: ../../../installation.rst:426
#: 20229f5dd3ae4bd381cf81c65c83c44e
#: 223a8ca53398448398153f94bc81075a
msgid "Then open a web browser to http://localhost:8000."
msgstr ""

#: ../../../installation.rst:328
#: f6c373465d684dcebfbe6fe0633c4138
msgid "Linux"
msgstr ""

#: ../../../installation.rst:330
#: 0e56e6e0eea343ffbf70bde692908cbe
msgid "OpenDroneMap can run on any Linux distribution that supports docker. According to `docker’s documentation website <https://docs.docker.com/install/>`_ the officially supported distributions are CentOS, Debian, Ubuntu and Fedora, with static binaries available for others. If you have to pick a distribution solely for running OpenDroneMap, Ubuntu is the recommended way to go."
msgstr ""

#: ../../../installation.rst:333
#: 7c7a0719bfe142648c378c8abd3317c2
msgid "Step 1. Install Requirements"
msgstr ""

#: ../../../installation.rst:335
#: 83171f74e0364d5980164438faf1521c
msgid "There are four programs that need to be installed:"
msgstr ""

#: ../../../installation.rst:337
#: 7d44a185ed8b46abbda9303fb286486f
msgid "Docker"
msgstr ""

#: ../../../installation.rst:338
#: f0ce43b8981d43c4bbfe1379c44c9321
msgid "Git"
msgstr ""

#: ../../../installation.rst:339
#: 85d3b272b1024b99a987709a8a34ba3a
msgid "Python (2 or 3)"
msgstr ""

#: ../../../installation.rst:340
#: a426ce10e416419ab1f4ddd2904af232
msgid "Pip"
msgstr ""

#: ../../../installation.rst:342
#: 29d1fde6e7644164be8c8eefdf0b7129
msgid "We cannot possibly cover the installation process for every Linux distribution out there, so we’ll limit the instructions to those that are distributions officially supported by docker. In all cases it’s just a matter of opening a terminal prompt and typing a few commands."
msgstr ""

#: ../../../installation.rst:345
#: 93f7ea63f0484dbcb52d9ac50eb6fb01
msgid "Install on Ubuntu / Debian"
msgstr ""

#: ../../../installation.rst:347
#: ../../../installation.rst:359
#: ../../../installation.rst:370
#: ../../../installation.rst:381
#: fa55e97f3d5c459786ad246d4d44b8da
#: 0fe1276569a04b86a3e82a20598da5ee
#: 84aa59c42f794da1865fd8088086ce42
#: 16195dff5bf14d5bab2b2b0a69103c31
msgid "Commands to type:"
msgstr ""

#: ../../../installation.rst:357
#: bc2e9dcb5f8140958fc44d216ff18eb5
msgid "Install on CentOS / RHEL"
msgstr ""

#: ../../../installation.rst:368
#: 9511489f5fbb43a6a4114e5997beb20c
msgid "Install on Fedora"
msgstr ""

#: ../../../installation.rst:379
#: 46bbf3597fbe45d09b2975ada9ad0b1f
msgid "Install on Arch"
msgstr ""

#: ../../../installation.rst:388
#: ef4b2e7dc3494eb09c3ce49495829580
msgid "Step 2. Check Additional Requirements"
msgstr ""

#: ../../../installation.rst:390
#: 84f96b987b3740c790eeeaa996c576fa
msgid "In addition to the three programs above, the dockercompose script is also needed. Sometimes it’s already installed with docker, but sometimes it isn’t. To verify if it’s installed try to type:"
msgstr ""

#: ../../../installation.rst:396
#: 0b00ac1f20674870b69a3d1f092d675a
msgid "You should see somethings similar to the following:"
msgstr ""

#: ../../../installation.rst:402
#: 284cca281f614c648f919e885686fdb3
msgid "If instead you get something similar to the following:"
msgstr ""

#: ../../../installation.rst:408
#: 983d0e6356a74275bd044ade12af08b9
msgid "you can install it by using pip:"
msgstr ""

#: ../../../installation.rst:416
#: 5842e50886b64cc4be4e08cec0121061
msgid "Step 3. Download and Launch WebODM"
msgstr ""

#: ../../../installation.rst:418
#: 29abff25121345dea6867519777717e3
msgid "From a terminal type:"
msgstr ""

#: ../../../installation.rst:429
#: 57309bc02a884a288ae73c44e72ed08c
msgid "Basic Commands and Troubleshooting"
msgstr ""

#: ../../../installation.rst:431
#: eb054dc2ff2e45869db94dfb3ad75aab
msgid "The cool thing about using docker is that 99% of the tasks you’ll ever need to perform while using WebODM can be done via the ./webodm.sh script. You have already encountered one of them:"
msgstr ""

#: ../../../installation.rst:437
#: d2bcc76bb7214209a6f4ee623e96d412
msgid "which takes care of starting WebODM and setting up a default processing node (node-odm-1). If you want to stop WebODM, you can already guess what the command is:"
msgstr ""

#: ../../../installation.rst:443
#: 3698ff42eb674c89b2d92629aba1ceac
msgid "There are several other commands you can use, along with different flags. Flags are parameters passed to the ./webodm.sh command and are typically prefixed with “–”. The **port** flag for example instructs WebODM to use a different network port:"
msgstr ""

#: ../../../installation.rst:449
#: 959bbbb701f648aa9e3711d89f36f123
msgid "Other useful commands are listed below:"
msgstr ""

#: ../../../installation.rst:468
#: 3c132782ccc54888bb8acf6806f4dbbf
msgid "`The community forum <https://community.opendronemap.org>`_ is a great place to ask for help if you     get stuck during any of the installation steps and for general questions on using the ./webodm.sh script."
msgstr ""

#: ../../../installation.rst:471
#: fdbc2929c47444bc8817faac19077cc1
msgid "Hello, WebODM!"
msgstr ""

#: ../../../installation.rst:473
#: 7ee17336350e4347afaa9f26185d0960
msgid "After running ./webodm.sh start and opening WebODM in the browser, you will be greeted with a welcome message and will be asked to create the first user. Take some time to familiarize yourself with the web interface and explore its various menus."
msgstr ""

#: ../../../installation.rst:479
#: cc069aa0bca7429eae5ab21d4666909f
msgid "*WebODM Dashboard*"
msgstr ""

#: ../../../installation.rst:481
#: 64e37b09ab6641718bde87e5e05b6c56
msgid "Notice that under the **Processing Nodes** menu there’s a \"node-odm-1\" node already configured for you to use. This is a NodeODM node and has been created automatically by WebODM. This node is running on the same machine as WebODM."
msgstr ""

#: ../../../installation.rst:483
#: b450d1d7e6344be38bc3e77f2955948e
msgid "If you’ve made it this far, congratulations! Now it’s time to start processing some data."
msgstr ""

#: ../../../installation.rst:490
#: 83d7a443ece94164aa76430eaefbd970
msgid "Running on more than one machine"
msgstr ""

#: ../../../installation.rst:492
#: 0c2d75f28a854d92a9fe8c5c4c28a9e9
msgid "**Optionally:** If you have another computer, you can repeat the installation process (install docker, git, python, etc.) and launch a new NodeODM node by typing from a Terminal/Git Bash window:"
msgstr ""

#: ../../../installation.rst:498
#: 4694bf64a88c48d7aad13c6bb1a1b316
msgid "The above command asks docker to launch a new container using the opendronemap/nodeodm image from Docker Hub (the latest version of NodeODM), using port 3000, setting a maximum number of concurrent tasks to 1 and to protect the node from unauthorized access using the password \"secret\"."
msgstr ""

#: ../../../installation.rst:500
#: f76fc4c596a14f9b82f90ddca6b06cca
msgid "From WebODM you can then press the **Add New** button under **Processing Nodes**. For the **hostname/IP** field type the IP of the second computer. For the **port** field type “3000”. For the **token** field type “secret”. You can also add an optional **label** for your node, such as “second computer”. Then press **Save**."
msgstr ""

#: ../../../installation.rst:502
#: 964b17d1817a4c7bbf72dd1ab2de029f
msgid "If everything went well, you should now have two processing nodes! You will be able to process multiple tasks in parallel using two different machines."
msgstr ""

#: ../../../installation.rst:505
#: b43697578b6e4d798aa51eddc14c5136
msgid "`Learn to edit <https://github.com/opendronemap/docs#how-to-make-your-first-contribution>`_ and help improve `this page <https://github.com/OpenDroneMap/docs/blob/publish/source/installation.rst>`_!"
msgstr ""
